/*
 * Copyleft (/c) MMXV, Proxy.sh
 * Distributed under the GNU GPL v2
 */
import com.android.builder.model.ProductFlavor

apply plugin: 'com.android.application'

apply plugin: 'checkstyle'
checkstyle {
    showViolations true
}

def openvpn3SwigFiles = new File(buildDir, "generated/source/ovpn3swig/ovpn3")

task("generateOpenVPN3Swig", type: Exec) {
    def swigcmd = "swig"
    // Workaround for Mac OS X since it otherwise does not find swig and I cannot get
    // the Exec task to respect the PATH environment :(
    if (file("/usr/local/bin/swig").exists())
        swigcmd = "/usr/local/bin/swig"

    doFirst {
        mkdir openvpn3SwigFiles
    }
    commandLine swigcmd, "-outdir", openvpn3SwigFiles, "-outcurrentdir", "-c++", "-java", "-package", "net.openvpn.ovpn3",
            "-Isrc/main/cpp/openvpn3/client", "-Isrc/main/cpp/openvpn3/",
            "-o", "${openvpn3SwigFiles}/ovpncli_wrap.cxx", "-oh", "${openvpn3SwigFiles}/ovpncli_wrap.h",
            "src/main/cpp/openvpn3/javacli/ovpncli.i"
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.2'

    defaultConfig {
        applicationId "com.proxy.sh.shieldtra"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode = 1
        versionName = "0.1.0"

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_STL=c++_static'
                //abiFilters "arm64-v8a"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'build/ovpnassets']
        }

        normal {
            java.srcDirs = ["src/ovpn3/java/", openvpn3SwigFiles]
        }

        noovpn3 {
        }

        debug {

        }

        release {

        }
    }

    signingConfigs {
        release
    }

    lintOptions {
        enable 'BackButton', 'EasterEgg', 'StopShip', 'IconExpectedSize', 'GradleDynamicVersion', 'NewerVersionAvailable'
        warning 'ImpliedQuantity', 'MissingQuantity'
        disable 'MissingTranslation', 'UnsafeNativeCodeLocation'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
//        debug {
//
//        }
//        release {
//
//        }
    }

    flavorDimensions "implementation"

    productFlavors {
        noovpn3 {
            dimension "implementation"
            buildConfigField 'boolean', 'openvpn3', 'false'
        }
        normal {
            dimension "implementation"
            buildConfigField 'boolean', 'openvpn3', 'true'
        }
    }

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.google.com' }
}

dependencies {
    implementation 'com.android.support:support-v4:28.0.0-rc02'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-annotations:28.0.0-rc02'
    implementation 'com.android.support:cardview-v7:28.0.0-rc02'
    implementation 'com.android.support:recyclerview-v7:28.0.0-rc02'
    //    compile 'ch.acra:acra:4.5.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.10'
    implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: '2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.16.0'
    testImplementation "org.robolectric:robolectric:3.7.1"
}

// ~/.gradle/gradle.properties
if (project.hasProperty('keystoreFile') &&
        project.hasProperty('keystorePassword') &&
        project.hasProperty('keystoreAliasPassword')) {
    android.signingConfigs.release.storeFile = file(keystoreFile)
    android.signingConfigs.release.storePassword = keystorePassword
    android.signingConfigs.release.keyPassword = keystoreAliasPassword
    android.signingConfigs.release.keyAlias = keystoreAlias
} else {
    android.buildTypes.release.signingConfig = null
}

// Ensure native build is run before assets, so assets are ready to be merged into the apk
android.applicationVariants.all { variant ->
    variant.mergeAssets.dependsOn(variant.externalNativeBuildTasks)
}


android.applicationVariants.all { variant ->
    variant.productFlavors.each {
        if (it.dimension == 'implementation' &&  it.name != 'noovpn3')
            variant.getJavaCompiler().dependsOn(generateOpenVPN3Swig)

    }

}

